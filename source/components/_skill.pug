mixin skillHeader (isCombat)
	.name.column
	+label({label:"Total", divObj:{class:"value column"}, spanObj:{class:"value column"}})
	+label({label:"Trained", divObj:{class:"column tilt"}, spanObj:{class:"column"}})
	if !isCombat
		+label({label:"Toolbox", divObj:{class:"column tilt"}, spanObj:{class:"column"}})
		+label({label:"Workshop", divObj:{class:"column tilt"}, spanObj:{class:"column"}})
	+label({label:"Modifier", divObj:{class:"column"}, spanObj:{class:"column"}})
	+label({label:"Trait", divObj:{class:"trait column"}, spanObj:{class:"column"}})

mixin skillRow (skill, isCombat)
	- const skillName = skill.name;
	- const attributeShort = skill.attribute ? skill.attribute.substring(0,3) : ""; // first 3 chars
	- const display = attributeShort == "" ? skillName : `${skillName} (${attributeShort})`;
	.name
		//-'aria-level':3,
		//-span.material-icons casino
		+roller({name: skillName,
			role:'heading',
			'data-i18n':display,
			value:"&{template:fe2} {{roll1=[[1d6]]}} {{roll2=[[1d6]]}} {{roll3=[[1d6]]}}",
			trigger:{triggeredFuncs:['rollSkill']}
			})

	.value.column
		//- it's easier to copy attribute mods here than to look them up later
		+input({
			name:`${skillName}_attribute_modifier`,
			type:'hidden',
			value:0,
			trigger:{
				affects:[`${skillName}`],
				formula:'@{'+`${skill.attribute}`+'_skill_modifier}'
				}
			})
		//- a place to store the total roll bonus
		+input({
			name:skillName,
			type:'number',
			trigger:{calculation:'calcSkill'}
			})
	- const trigger = {affects: [skillName]};
	.column
		+checkbox({
			name:`${skillName}_trained`,
			value:1,
			class:'column',
			trigger
			})

	if !isCombat
		.column
			+checkbox({
				name:`${skillName}_toolbox`,
				value:1,
				class:'column',
				trigger
				})

		.column
			+checkbox({
				name:`${skillName}_workshop`,
				value:1,
				class:'column',
				trigger
				})

	.column
		+input({name:`${skillName}_modifier`,
			type:'number',
			trigger
			})

	+trait({name:`${skillName}_trait`})
	if isCombat
		+trait({name:`${skillName}_trait2`})
