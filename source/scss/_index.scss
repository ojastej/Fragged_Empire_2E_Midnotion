@use 'k-scaffold' as k;
@use './variables';
@use './nav';

@mixin variables{
	@include variables.all;
}
@mixin darkVariables {
	@include variables.dark;
}
@mixin generic{
	// Put generic styling that will be used in both the sheet and the roll template here
}
@mixin sheet{
	@include generic;
	@include variables;
	// Put your generic sheet styling here
	#main
	{
		position: relative;
		top: -20px;
	}
	article {
		display: flex;
		flex-wrap: wrap;
		justify-content: flex-start;
		align-items: flex-start;
		gap: 10px;

		section {
			min-width: 20rem;
		}
	}
	#skills, #combatSkills {
		flex-grow: 2;
	}
	.flex.vertical {
		display: flex;
		flex-direction: column;
	}
	.flow > label {
		margin-right: 0.5rem;
	}
	input:not(:where([type=checkbox],[type=radio])),
	select,
	textarea
	{
		border-color: var(--borderColor);
		border-width: var(--borderWidth);
	}
	input:where([type=checkbox],[type=radio])
	{
		border-color: var(--borderColor);
		border-width: 1px;
	}
	input:where([type=checkbox]):not(.collapse):not(.fill-left__radio):checked:before
	{
		align-self: center;
		justify-content: center;
		margin-top:3px;
		padding-bottom: 0px;
	}
	input:where([type=number])
	{
		width: var(--numberWidth);
	}
	.collapse-container > .collapse
	{
		margin-top: 2px;
		right: 23px;
	}
	.current-max
	{
		display: inline-grid;
		grid-template-columns: auto auto;
		column-gap: 0px;
		
		align-items: center;
		border-color: var(--borderColor);
		border-width: var(--borderWidth);
		border-style: solid;
		box-sizing: border-box;
		border-radius: 5px;
		width: calc(2 * var(--numberWidth) + 2);
		text-align: center;

		input:where([type=number])
		{
			display: block;
			border-width: 0;
			width: var(--numberWidth);
		}

		:first-child {
			border-right: 1px solid;
			border-radius: 0;
			padding-right: 2px;
		}
	}
	.limit, .column {
		input:where([type=number])
		{
			width: calc(1.25 * var(--numberWidth));
		}
	}
	.attributes {
		margin: 0;
	}
	.attributes > .grid {
		text-transform: capitalize;
		// attribute, cur/max, skill mod, limit, trait
		grid-auto-columns: max-content;

		.name {
			grid-column-start: 1;
		}
		.trait-container {
			grid-column-end: 6;
		}
	}
	.skills > .grid 
	{
		grid-auto-columns: max-content;
		input:not(:where([type=checkbox],[type=radio])) {
			display: inline-block;
		}
		input[disabled=disabled] {
			border-width:0;
			color: darkgrey;
		}
		.name {
			grid-column-start: 1;
			display: flex;
			flex-direction: column;
			justify-content: center;
		}
		// .tilt.column
		// {
		// 	//text-align: left;
		// 	align-items: end;
		// 	justify-content: left;
		// }
		.skill-mod {
			font-family: var(--contentFont);
			width: calc(1.25 * var(--numberWidth));
			text-align: center;
			border-color: lightskyblue;
			border-width: var(--borderWidth);
			border-style: solid;
			box-sizing: border-box;
			padding: 2px;
			border-radius: 5px;
		}
		.tilt.column >span {
			//text-align: left;
			//align-items: end;
			margin-bottom: -1.5rem;
			margin-right: -1rem;
			width: 2rem;
			transform-origin: left top;
			transform: rotate(-60deg);
		}
		.trait-container {
			grid-column-end: 8;
		}
	}
	.combat > .grid {
		.trait-container {
			grid-column-end: 6;
		}
	}
	.parentheses::before { content: "("; }
	.parentheses::after { content: ")"; }
	.parentheses {
		text-align: center;
	}
	.column, .grid .column {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
	}
	.roller {
		text-transform: capitalize;
		font-family: var(--contentHeadFont);
	}
	// .roller:before {
	// 	// font-family: dicefontd6;
	// 	// content:"F";
	// 	// content: 'ðŸž”';
	// 	font-family: 'Material Icons';

	// 	// this interferes with the roll template styling
	// 	//content: '\eb40';
	//	content: 'î­€';
	// }
}
@mixin roll{
	@include generic;
	// Put any generic roll template styling you have here
	/* HTML: div class="hexagon"/div */
	.hexagon {
		height: 100px; /* adjust to control the size  */
		aspect-ratio: 1/cos(30deg);
		clip-path: polygon(50% -50%,100% 50%,50% 150%,0 50%);
		background: #3B8686;
	}
}
.ui-dialog .tab-content .charsheet{
	@include k.defaultStyles;
}