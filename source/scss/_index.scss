@use 'k-scaffold' as k;
@use './variables';
@use './nav';

@mixin variables{
	@include variables.all;
}
@mixin darkVariables {
	@include variables.dark;
}
@mixin generic{
	// Put generic styling that will be used in both the sheet and the roll template here
}
@mixin sheet{
	@include generic;
	@include variables;
	// Put your generic sheet styling here
	// #main
	// {
	input:not(:where([type=checkbox],[type=radio])),
	textarea
	{
		border-color: var(--borderColor);
		border-width: var(--borderWidth);
	}
	input:where([type=checkbox],[type=radio])
	{
		border-color: var(--borderColor);
		border-width: 1px;
	}
	input:where([type=checkbox]):not(.collapse):not(.fill-left__radio):checked:before
	{
		align-self: center;
		justify-content: center;
		margin-top:3px;
		padding-bottom: 0px;
	}
	.collapse-container > .collapse
	{
		margin-top: 2px;
		right: 23px;
	}
	.current-max
	{
		border-color: var(--borderColor);
		border-width: var(--borderWidth);
		border-style: solid;
		box-sizing: border-box;
		border-radius: 5px;
		width: 5rem;
		text-align: center;

		input:not(:where([type=checkbox],[type=radio]))
		{
			border-width: 0;
			width: 2rem;
		}
	}
	// }
	.attributes > .grid {
		text-transform: capitalize;
		// attribute, cur/max, skill mod, limit, trait
		grid-auto-columns: max-content;

		.name {
			grid-column-start: 1;
		}
		.trait-container {
			grid-column-end: 6;
		}
	}
	.skills > .grid 
	{
		grid-auto-columns: max-content;
		input:not(:where([type=checkbox],[type=radio])) {
			display: inline-block;
		}
		input[disabled=disabled] {
			border-width:0;
			color: darkgrey;
		}
		.name {
			grid-column-start: 1;
			display: flex;
			flex-direction: column;
			justify-content: center;
		}
		.trait-container {
			grid-column-end: 8;
		}
	}
	.parentheses::before { content: "("; }
	.parentheses::after { content: ")"; }
	.parentheses {
		text-align: center;
	}
	.column, .grid .column {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
	}
	.column * {
		align-items: center;
	}
	.roller {
		text-transform: capitalize;
		font-family: var(--contentHeadFont);
	}
	// .roller:before {
	// 	// font-family: dicefontd6;
	// 	// content:"F";
	// 	// content: 'ðŸž”';
	// 	font-family: 'Material Icons';

	// 	// this interferes with the roll template styling
	// 	//content: '\eb40';
	//	content: 'î­€';
	// }
}
@mixin roll{
	@include generic;
	// Put any generic roll template styling you have here
}
.ui-dialog .tab-content .charsheet{
	@include k.defaultStyles;
}