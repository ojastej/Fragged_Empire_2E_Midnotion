@use 'k-scaffold' as k;
@use './variables';

@mixin variables{
	@include variables.all;
}
@mixin darkVariables {
	@include variables.dark;
}
@mixin generic{
	// Put generic styling that will be used in both the sheet and the roll template here
}
@mixin sheet{
	@include generic;
	@include variables;
	// Put your generic sheet styling here
	#main input:not(:where([type=checkbox],[type=radio]))
	{
		border-color: var(--borderColor);
		border-width: var(--borderWidth);
	}
	#main input:where([type=checkbox],[type=radio])
	{
		border-color: var(--borderColor);
		border-width: 1px;
	}
	#main .current-max
	{
		border-color: var(--borderColor);
		border-width: var(--borderWidth);
		border-style: solid;
		box-sizing: border-box;
		border-radius: 5px;
		width: 5rem;
		text-align: center;

		input:not(:where([type=checkbox],[type=radio]))
		{
			border-width: 0;
			width: 2rem;
		}
	}
	.attributes > .grid {
		text-transform: capitalize;
		// attribute, cur/max, skill mod, limit, trait
		//grid-template-columns: 6rem 8rem 4rem 4rem auto;
		//grid-template-columns: auto auto auto auto auto;
		grid-auto-columns: max-content;
	}
	.attributes > .grid > .name {
		grid-column-start: 1;
	}
	.attributes > .grid > .trait {
		grid-column-end: 6;
	}
	.skills > .grid 
	{
		grid-auto-columns: max-content;
		input {
			display: inline-block;
		}
		.name {
			grid-column-start: 1;
		}
		.trait {
			grid-column-end: 7;
		}
	}
	.parentheses::before { content: "("; }
	.parentheses::after { content: ")"; }
	.parentheses {
		text-align: center;
	}
	.column {
		display: flex;
		flex-direction: column;
		align-items: center;
	}
	.column * {
		align-items: center;
	}
}
@mixin roll{
	@include generic;
	// Put any generic roll template styling you have here
}
.ui-dialog .tab-content .charsheet{
	@include k.defaultStyles;
}